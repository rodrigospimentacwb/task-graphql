type User {
    uuid: ID!
    name: String!
    email: String!
}

type Task {
    uuid: ID!
    description: String
    status: TaskStatus!
    user: User!
}

type Query {
    # Task Controller
    listAllTasks : [Task]
    taskById(uuid: ID!) : Task
    listTaskByStatus (taskStatus : TaskStatus!) : [Task]
    findTasksByUserId(userId: ID!) : [Task]

    # User Controller
    listUsers : [User]
    userById(uuid: ID!) : User
}

type Mutation {
    # Task Controller
    createTask(description: String!, userId: ID!) : Task
    updateTask(uuid : ID!, taskStatus : TaskStatus!, description : String) : Task
    deleteTask(uuid : ID!): String

    # User Controller
    createUser(name: String!, email: String!) : User
}

enum TaskStatus {
    NEW
    IN_PROGRESS
    COMPLETED
    CANCELED
}